//Q: 如何同步数据库中的更改到应用程序的模型中？
//A: 在DatabaseFirst中应用程序模型随着数据库改变而改变。数据库本身涉及三种改变，即添加新内容、修改现存内容和删除内容，我们分别探讨。
  //1.新增内容。如添加一个新的表，首先在数据库中操作一通，添加了一个新的表。为了与数据库同步，在项目模型中的edmx视图中的空白处右键，点击“从数据库更新
    //模型(Update Model from Database)”。可以看到弹出来的对话框与建立DFW连接时的几乎一样。对话框中有三个选项卡，添加/更新/和删除。选项卡中的内容为
    //EF自动感应对比了与现模型的不同所呈现的内容。如数据库中新填了一个表，这个表就可以在对话框中的【添加】下找到，勾选然后点完成，即可完成同步。
  //2.更新内容。如在已存在的表中有变动，则只用更新即可。同样右键点击edmx图中空白处，点击从数据看更新模型，在弹出的对话框中点击refresh选项卡，EF会自动
    //检测出有更新的部分，再点击完成即可完成同步。
  //3.删除内容。同样的操作，右键edmx->从数据库更新模型->删除，其中就有EF检测出的从数据库删除内容的变动。勾选确认变动的项即可完成同步。

//Q: 在edmx图中可以对显示出来的对象经行直接修改的操作，这些操作会影响到数据库么？
//A: 不会。这里有一个潜在的误区，在DFW中永远是数据库先行，我们在edmx设计图中修改的内容并不是数据库到程序的映射，而是存在于程序内部中、由EF根据数据库生成
  //的代码，即ConceptualModel，直接更改ConceptualModel并不会影响到数据库。ConceptualModel的作用是基于数据库提供一些可以在C#程序中调用的对象，这些对
  //象通过Mappings与StorageModel映射，而StorageModel又与数据库映射，从而达到在程序中连接/访问数据库的目的。

//Q: 那如果在数据库中做出变更，ConceptualModel会自动更新吗？
//A: 并不会自动更新，需要通过上述“从数据库更新模型(Update Model from Database)”程序同步。这里是一个很大的误区，即使用同步程序同步数据库与Conceptual-
  //Model后ConceptualModel就会与StorageModel同步。实际情况并不完全是这样，有时候需要手动在ConceptualModel中修复一些异常，这些异常主要是由于同步机制
  //造成。以下为同步机制：
    //1.添加表/列时，
  //2.更改表/列时，
