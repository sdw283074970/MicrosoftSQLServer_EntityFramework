//Q: 什么是EntityFramework？
//A: 如果应用程序需要访问数据库，因为应用程序使用的语言(如C#)与数据库语言(如SQL语言)完全不一样，就需要通过中间的一个持续性框架(Persistance FrameWork)
  //来与数据库沟通。我们可以通过有ADO接口的类来实现这一系列操作，如SqlConnection类、SqlCommand、SqlDataReader类等，也可以用别人写好的持续性框架操作，
  //甚至可以自己写。但是自己写一个持续性框架来访问数据库开销太大，一般来说需要写大量的储存过程(Stored Procedures)，使用ADO.NET来读取/修改/删除数据，
  //并需要手动将储存过程的数据和数据库中的数据关联。Entity Framework(EF)就是这样一个持续性框架，在安装了EF包之后我们就不用自己做以上的所有操作，EF
  //会搞定一切，我们只用把工作中心放在如何设计、修改、维护和访问这些数据就行了。
  
//Q: 什么是MS SQL Server和SSMS?
//A: MS SQL Server是微软自家的关系型数据关系系统，是一个全面的数据库平台。可以简单的理解为，MS SQL Server是一套可以安装在广泛平台上的软件，安装过后
  //这个平台就可以作为数据库服务器使用，网页、应用程序可以链接上这个数据库服务器并访问其中的数据。SSMS是一套可视化的管理软件，用于管理赚了MS SQL Server
  //的服务器。可以直接通过SSMS和SQL查询语句对数据库服务器经行管理，也可以使用C#和ADO.NET中的EF进行管理。很多桌面软件、网页、移动程序都是在.NET框架下
  //开发的，在应用程序内部就可以直接与服务器的数据库通信访问，因此微软家这一套C#+EF+MS SQL Server的组合显得尤为高效。
  
//Q: EF是如何工作的？
//A: EF有三种工作流(WorkFlow)，或者说有三种工作模式可以实现程序到数据库的访问。第一种也是最传统古老的数据库优先(DatabaseFirst)工作模式，之后会简单
  //介绍；第二种是新兴的代码优先(CodeFirst)工作流，之后会详细讲解；最后一种是模型优先(ModelFirst)工作流，业界普遍认为不靠谱，所以不做探讨。
  
//Q: 我们应该使用哪一种工作流？
//A: 数据库优先由于古老，所有适用性普遍，很多项目都是基于数据库优先来设计的。简单的说数据库优先是指，代码基于数据库生成并且随之变动，好处是易于理解和
  //操作，坏处则是生成的代码太多阅读略烦，需要大量对数据库设计的操作(如建立表之间的关系，需要大量鼠标点来点去)，并且需要手写版本更新日志才能确保项目的
  //正常运转。而代码优先则相仿，数据库随着代码变化而变化，好处是代码易于掌控整个项目，几乎都是键盘操作，操作历史代码直接可见，甚至可以直接还原到某一时
  //间点的操作，比数据库优先更易于维护，另外，代码优先也能完美继承数据库优先的项目。
  
  //既然C#都没问题了，为什么不代码优先？
